{
  "id": "https://schema.management.azure.com/schemas/2023-03-15-preview/Microsoft.DocumentDB.json#",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Microsoft.DocumentDB",
  "description": "Microsoft DocumentDB Resource Types",
  "resourceDefinitions": {
    "cassandraClusters": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2023-03-15-preview"
          ]
        },
        "identity": {
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedCassandraManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Identity for the resource."
        },
        "location": {
          "type": "string",
          "description": "The location of the resource group to which the resource belongs."
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$",
              "minLength": 1,
              "maxLength": 100
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Managed Cassandra cluster name."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ClusterResourceProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties of a managed Cassandra cluster."
        },
        "resources": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/cassandraClusters_dataCenters_childResource"
              }
            ]
          }
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.DocumentDB/cassandraClusters"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.DocumentDB/cassandraClusters"
    },
    "cassandraClusters_dataCenters": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2023-03-15-preview"
          ]
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$",
              "minLength": 1,
              "maxLength": 100
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Data center name in a managed Cassandra cluster."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/DataCenterResourceProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties of a managed Cassandra data center."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.DocumentDB/cassandraClusters/dataCenters"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.DocumentDB/cassandraClusters/dataCenters"
    }
  },
  "definitions": {
    "AuthenticationMethodLdapProperties": {
      "type": "object",
      "properties": {
        "connectionTimeoutInMs": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Timeout for connecting to the LDAP server in miliseconds. The default is 5000 ms."
        },
        "searchBaseDistinguishedName": {
          "type": "string",
          "description": "Distinguished name of the object to start the recursive search of users from."
        },
        "searchFilterTemplate": {
          "type": "string",
          "description": "Template to use for searching. Defaults to (cn=%s) where %s will be replaced by the username used to login."
        },
        "serverCertificates": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Certificate"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "serverHostname": {
          "type": "string",
          "description": "Hostname of the LDAP server."
        },
        "serverPort": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Port of the LDAP server."
        },
        "serviceUserDistinguishedName": {
          "type": "string",
          "description": "Distinguished name of the look up user account, who can look up user details on authentication."
        },
        "serviceUserPassword": {
          "type": "string",
          "description": "Password of the look up user."
        }
      },
      "description": "Ldap authentication method properties. This feature is in preview."
    },
    "BackupSchedule": {
      "type": "object",
      "properties": {
        "cronExpression": {
          "type": "string",
          "description": "The cron expression that defines when you want to back up your data."
        },
        "retentionInHours": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The retention period (hours) of the backups. If you want to retain data forever, set retention to 0."
        },
        "scheduleName": {
          "type": "string",
          "description": "The unique identifier of backup schedule."
        }
      }
    },
    "cassandraClusters_dataCenters_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2023-03-15-preview"
          ]
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$",
              "minLength": 1,
              "maxLength": 100
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Data center name in a managed Cassandra cluster."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/DataCenterResourceProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties of a managed Cassandra data center."
        },
        "type": {
          "type": "string",
          "enum": [
            "dataCenters"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.DocumentDB/cassandraClusters/dataCenters"
    },
    "CassandraError": {
      "type": "object",
      "properties": {
        "additionalErrorInfo": {
          "type": "string",
          "description": "Additional information about the error."
        },
        "code": {
          "type": "string",
          "description": "The code of error that occurred."
        },
        "message": {
          "type": "string",
          "description": "The message of the error."
        },
        "target": {
          "type": "string",
          "description": "The target resource of the error."
        }
      }
    },
    "Certificate": {
      "type": "object",
      "properties": {
        "pem": {
          "type": "string",
          "description": "PEM formatted public key."
        }
      }
    },
    "ClusterResourceProperties": {
      "type": "object",
      "properties": {
        "authenticationMethod": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "None",
                "Cassandra",
                "Ldap"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Which authentication method Cassandra should use to authenticate clients. 'None' turns off authentication, so should not be used except in emergencies. 'Cassandra' is the default password based authentication. The default is 'Cassandra'."
        },
        "backupSchedules": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BackupSchedule"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "List of backup schedules that define when you want to back up your data."
        },
        "cassandraAuditLoggingEnabled": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Whether Cassandra audit logging is enabled"
        },
        "cassandraVersion": {
          "type": "string",
          "description": "Which version of Cassandra should this cluster converge to running (e.g., 3.11). When updated, the cluster may take some time to migrate to the new version."
        },
        "clientCertificates": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Certificate"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "List of TLS certificates used to authorize clients connecting to the cluster. All connections are TLS encrypted whether clientCertificates is set or not, but if clientCertificates is set, the managed Cassandra cluster will reject all connections not bearing a TLS client certificate that can be validated from one or more of the public certificates in this property."
        },
        "clusterNameOverride": {
          "type": "string",
          "description": "If you need to set the clusterName property in cassandra.yaml to something besides the resource name of the cluster, set the value to use on this property."
        },
        "clusterType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Production",
                "NonProduction"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Type of the cluster. If set to Production, some operations might not be permitted on cluster."
        },
        "deallocated": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Whether the cluster and associated data centers has been deallocated."
        },
        "delegatedManagementSubnetId": {
          "type": "string",
          "description": "Resource id of a subnet that this cluster's management service should have its network interface attached to. The subnet must be routable to all subnets that will be delegated to data centers. The resource id must be of the form '/subscriptions/<subscription id>/resourceGroups/<resource group>/providers/Microsoft.Network/virtualNetworks/<virtual network>/subnets/<subnet>'"
        },
        "extensions": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Extensions to be added or updated on cluster."
        },
        "externalGossipCertificates": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Certificate"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "List of TLS certificates used to authorize gossip from unmanaged data centers. The TLS certificates of all nodes in unmanaged data centers must be verifiable using one of the certificates provided in this property."
        },
        "externalSeedNodes": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SeedNode"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "List of IP addresses of seed nodes in unmanaged data centers. These will be added to the seed node lists of all managed nodes."
        },
        "hoursBetweenBackups": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "(Deprecated) Number of hours to wait between taking a backup of the cluster."
        },
        "initialCassandraAdminPassword": {
          "type": "string",
          "description": "Initial password for clients connecting as admin to the cluster. Should be changed after cluster creation. Returns null on GET. This field only applies when the authenticationMethod field is 'Cassandra'."
        },
        "prometheusEndpoint": {
          "oneOf": [
            {
              "$ref": "#/definitions/SeedNode"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "provisionError": {
          "oneOf": [
            {
              "$ref": "#/definitions/CassandraError"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "provisioningState": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Creating",
                "Updating",
                "Deleting",
                "Succeeded",
                "Failed",
                "Canceled"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "repairEnabled": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Should automatic repairs run on this cluster? If omitted, this is true, and should stay true unless you are running a hybrid cluster where you are already doing your own repairs."
        },
        "restoreFromBackupId": {
          "type": "string",
          "description": "To create an empty cluster, omit this field or set it to null. To restore a backup into a new cluster, set this field to the resource id of the backup."
        }
      },
      "description": "Properties of a managed Cassandra cluster."
    },
    "DataCenterResourceProperties": {
      "type": "object",
      "properties": {
        "authenticationMethodLdapProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AuthenticationMethodLdapProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Ldap authentication method properties. This feature is in preview."
        },
        "availabilityZone": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "If the data center has Availability Zone support, apply it to the Virtual Machine ScaleSet that host the cassandra data center virtual machines."
        },
        "backupStorageCustomerKeyUri": {
          "type": "string",
          "description": "Indicates the Key Uri of the customer key to use for encryption of the backup storage account."
        },
        "base64EncodedCassandraYamlFragment": {
          "type": "string",
          "description": "A fragment of a cassandra.yaml configuration file to be included in the cassandra.yaml for all nodes in this data center. The fragment should be Base64 encoded, and only a subset of keys are allowed."
        },
        "dataCenterLocation": {
          "type": "string",
          "description": "The region this data center should be created in."
        },
        "deallocated": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Whether the data center has been deallocated."
        },
        "delegatedSubnetId": {
          "type": "string",
          "description": "Resource id of a subnet the nodes in this data center should have their network interfaces connected to. The subnet must be in the same region specified in 'dataCenterLocation' and must be able to route to the subnet specified in the cluster's 'delegatedManagementSubnetId' property. This resource id will be of the form '/subscriptions/<subscription id>/resourceGroups/<resource group>/providers/Microsoft.Network/virtualNetworks/<virtual network>/subnets/<subnet>'."
        },
        "diskCapacity": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Number of disks attached to each node. Default is 4."
        },
        "diskSku": {
          "type": "string",
          "description": "Disk SKU used for data centers. Default value is P30."
        },
        "managedDiskCustomerKeyUri": {
          "type": "string",
          "description": "Key uri to use for encryption of managed disks. Ensure the system assigned identity of the cluster has been assigned appropriate permissions(key get/wrap/unwrap permissions) on the key."
        },
        "nodeCount": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The number of nodes the data center should have. This is the desired number. After it is set, it may take some time for the data center to be scaled to match. To monitor the number of nodes and their status, use the fetchNodeStatus method on the cluster."
        },
        "provisionError": {
          "oneOf": [
            {
              "$ref": "#/definitions/CassandraError"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "provisioningState": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Creating",
                "Updating",
                "Deleting",
                "Succeeded",
                "Failed",
                "Canceled"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "sku": {
          "type": "string",
          "description": "Virtual Machine SKU used for data centers. Default value is Standard_DS14_v2"
        }
      },
      "description": "Properties of a managed Cassandra data center."
    },
    "ManagedCassandraManagedServiceIdentity": {
      "type": "object",
      "properties": {
        "type": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "SystemAssigned",
                "None"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The type of the resource."
        }
      },
      "description": "Identity for the resource."
    },
    "SeedNode": {
      "type": "object",
      "properties": {
        "ipAddress": {
          "type": "string",
          "description": "IP address of this seed node."
        }
      }
    }
  }
}